import { Entities } from '@src/common/abstracts/entities.abstracts';
import { <%= name.pascalCase %>Model, <%= name.pascalCase %>Props } from '../models/<%= name.kebabCase %>.model';
import { <%= name.pascalCase %>sModel } from '../models/<%= name.kebabCase %>s.model';
import { <%= name.pascalCase %> } from './<%= name.kebabCase %>';
import { SelfPartial } from '@src/common/interfaces/self-partial';

export class <%= name.pascalCase %>s extends Entities<<%= name.pascalCase %>Model> implements <%= name.pascalCase %>sModel {
  private constructor(public readonly value: <%= name.pascalCase %>Model[]) {
    super(value);
  }

  public static create(value: SelfPartial<<%= name.pascalCase %>Props, 'uuid'>): <%= name.pascalCase %>s {
    if (!Array.isArray(value)) throw new TypeError('<%= name.pascalCase %>s is not a array');
    return <%= name.pascalCase %>s.create(value.map((data) => <%= name.pascalCase %>.create(data)));
  }
}
